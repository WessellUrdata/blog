---
import { getCollection } from "astro:content";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import timezone from "dayjs/plugin/timezone";

dayjs.extend(utc);
dayjs.extend(timezone);

import { tz } from "../../constants.ts";

import ImageCpn from "../ImageCpn.astro";

const posts = await getCollection("blog");

posts.sort((a, b) => {
  return dayjs(b.data.dateTime).unix() - dayjs(a.data.dateTime).unix();
});
---

<div class="my-8">
  <span class="flex my-4">
    <h1 class="text-2xl font-bold text-accent">Blog posts ✍️☺️</h1>

    <a href="/rss.xml" class="ml-auto my-auto align-middle" aria-label="Link to get RSS feed">
      <button class="btn btn-sm btn-outline btn-accent" aria-label="RSS Button">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-4 my-auto">
          <path
            d="M3 3C12.9411 3 21 11.0589 21 21H18C18 12.7157 11.2843 6 3 6V3ZM3 10C9.07513 10 14 14.9249 14 21H11C11 16.5817 7.41828 13 3 13V10ZM3 17C5.20914 17 7 18.7909 7 21H3V17Z"
          ></path>
        </svg>
        <span class="hidden sm:block">RSS Feed</span>
      </button>
    </a>
  </span>

  {
    posts.map((post) => (
      <div class="px-2 py-4 flex flex-col gap-y-2 sm:flex-row-reverse border-y-[.5px] border-gray-400">
        {post.data.cover ? (
          <a class="hover:brightness-75 transition sm:h-full sm:my-auto" href={post.collection + "/" + post.slug}>
            <ImageCpn
              src={post.data.cover.src}
              alt={post.data.cover.alt}
              classList="mx-auto sm:max-w-[240px] max-h-[120px] w-11/12 object-contain cover-image mb-1 bg-gray-700 rounded"
            />
          </a>
        ) : (
          ""
        )}
        <div class="flex flex-col gap-y-2 grow">
          <a
            class="text-2xl font-medium text-accent hover:brightness-75 transition"
            href={post.collection + "/" + post.slug}
          >
            {post.data.title}
          </a>
          <span class="flex flex-row flex-wrap text-sm gap-x-1 gap-y-2">
            {dayjs(post.data.dateTime).tz(tz).format("YYYY-MM-DD, HH:mm (UTC Z)")}
            <span>
              {post.data.tags.map((tag: string[]) => (
                <span class="badge badge-accent badge-outline mx-0.5 p-2 text-xs">{tag}</span>
              ))}
            </span>
          </span>
          <p class="mt-2">{post.data.description}</p>
        </div>
      </div>
    ))
  }
</div>
